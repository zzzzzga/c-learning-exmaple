1.无参构造
2.有参构造
3.拷贝构造(用于一个对象初始化另一个对象)


无参构造的调用
ClassName obj;		//ClassName obj();这样是错误的

有参构造的调用
ClassName obj(args);
ClassName obj = args;
ClassName obj = ClassName(args);	//先生成一个匿名对象，在直接扶正，变成有名对象

拷贝构造函数的调用
ClassName obj1;
1.ClassName obj2 = obj1;
2.ClassName obj3(obj1);
3.对象作为函数参数，实参赋值给形参，会调用拷贝构造函数
4.函数返回对象时，会调用拷贝构造，产生匿名对象
	情况1：ClassName obj = func();	//匿名对象扶正，变成有名对象（不马上析构）
	情况2：ClassName obj; obj = func();		//赋值后，匿名对象析构（马上析构）
	情况3：func(); //不接收返回的匿名对象，就立即析构（马上析构）


注：若程序员不写任何构造函数，c++会提供一个默认的无参构造函数（若程序员写了构造函数，c++编译器不提供默认的构造函数）
注：若程序员没有写拷贝构造函数，c++编译器会提供一个默认的拷贝构造函数（该拷贝构造函数，只会提供简单的成员变量值的复制）

只要你写了构造函数就必须要用，c++不会提供默认的构造函数

析构函数
对象生命周期结束后，c++编译器会自动调用析构函数




















